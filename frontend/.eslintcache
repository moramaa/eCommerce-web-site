[{"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\index.js":"1","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\store.js":"2","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\App.js":"4","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Header.js":"6","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\productsConstants.js":"11","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Product.js":"12","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Message.js":"13","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Rating.js":"15","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\productsActions.js":"16","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\userConstants.js":"21"},{"size":383,"mtime":1612956548107,"results":"22","hashOfConfig":"23"},{"size":1167,"mtime":1620151263727,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":784,"mtime":1613582318928,"results":"26","hashOfConfig":"23"},{"size":1172,"mtime":1615465768260,"results":"27","hashOfConfig":"23"},{"size":977,"mtime":1613517940130,"results":"28","hashOfConfig":"23"},{"size":434,"mtime":1612108273457,"results":"29","hashOfConfig":"23"},{"size":1188,"mtime":1614873714837,"results":"30","hashOfConfig":"23"},{"size":3936,"mtime":1615463438799,"results":"31","hashOfConfig":"23"},{"size":4391,"mtime":1614703675775,"results":"32","hashOfConfig":"23"},{"size":357,"mtime":1613585083829,"results":"33","hashOfConfig":"23"},{"size":1087,"mtime":1612398084954,"results":"34","hashOfConfig":"23"},{"size":248,"mtime":1614324624887,"results":"35","hashOfConfig":"23"},{"size":378,"mtime":1614757895008,"results":"36","hashOfConfig":"23"},{"size":1883,"mtime":1612214376890,"results":"37","hashOfConfig":"23"},{"size":1278,"mtime":1615465501596,"results":"38","hashOfConfig":"23"},{"size":1016,"mtime":1615462892294,"results":"39","hashOfConfig":"23"},{"size":100,"mtime":1613585238852,"results":"40","hashOfConfig":"23"},{"size":831,"mtime":1615463371419,"results":"41","hashOfConfig":"23"},{"size":568,"mtime":1620147982674,"results":"42","hashOfConfig":"23"},{"size":198,"mtime":1620147966659,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"gfupd1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\index.js",[],["89","90"],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\store.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\App.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\CartScreen.js",["91"],"import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import {Link} from 'react-router'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Massage from '../components/Message'\r\nimport {addToCart,removeFromCart} from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n\r\n    const productId = match.params.id\r\n    //return the number of qty they sent in the URL\r\n    const qty = location.search ? Number(location.search.split('=') [1]) : 1\r\n \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(()=>{\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler =(id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler =()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>העגלה שלך</h1>\r\n            {cartItems.length === 0 ? (<Massage>העגלה ריקה <Link to='/'>המשך לקנות</Link></Massage> )\r\n            :(<ListGroup variant='flush'>\r\n\r\n                {cartItems.map(item => (\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}> {item.name} </Link>\r\n                            </Col>\r\n                            <Col md={2}> ${item.price} </Col>\r\n                            <Col md={2}> \r\n                            <Form.Control as='select' value={item.qty} \r\n                                    onChange={(e) => dispatch (addToCart(item.product,Number(e.target.value)))}\r\n                                    >\r\n                                     {\r\n                                     [...Array(item.countInStock).keys()].map( (x) =>(\r\n                                         <option key={x + 1} value={x + 1}>\r\n                                             {x + 1}\r\n                                         </option>\r\n                                     )) }    \r\n                                    </Form.Control> \r\n                            </Col>\r\n                            <Col md={2} >\r\n                            <Button type='button' variant='light' onClick={()=> removeFromCartHandler(item.product)} >\r\n                                <i className='fas fa-trash'></i>\r\n\r\n                            </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>)\r\n            }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2> סה\"כ פריטים \r\n                                ({cartItems.reduce((acc, item)=> acc + item.qty, 0)})\r\n                            </h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price,0 ).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length ===0} onClick={checkoutHandler}>\r\n                            המשך לרכישה \r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            \r\n            </Col>\r\n     \r\n        </Row>\r\n    )\r\n}\r\nexport default CartScreen\r\n","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\ProductScreen.js",["92"],"import React,{useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row ,Col,Image,ListGroup,Card,Button, ListGroupItem,Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Massage from '../components/Message'\r\n import {listProductDetails} from '../actions/productsActions'\r\n\r\nconst ProductScreen = ({ history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading,error, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match])\r\n\r\n    const addToCartHandler =() =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return <>\r\n    <Link className='btn btn-light my-3' to='/' >\r\n        Go back\r\n    </Link>\r\n    {loading ? <Loader /> \r\n     : error ? <Massage variant='danger'> {error} </Massage> \r\n     :(\r\n        <Row>\r\n        <Col md={6}>\r\n        <Image src={product.image} alt ={ `a`+ product.name} fluid/>\r\n        </Col>\r\n        \r\n        <Col md={3}>\r\n        <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <Rating\r\n                    value={product.rating} \r\n                    text={`${product.numReviews} reviews`} />\r\n            </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    Price:{ product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    Description:{ product.description}\r\n                    </ListGroup.Item>\r\n        </ListGroup>\r\n        </Col>\r\n\r\n         {/* cart  */}\r\n\r\n         <Col md={3}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>\r\n                           Price:                             \r\n                        </Col>\r\n                        <Col>\r\n                            <strong>${product.price}</strong>\r\n                        </Col>\r\n                    </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                         <Col>\r\n                           Status:                             \r\n                        </Col>\r\n                        <Col>\r\n                            {product.countInStock >0 ?'In stock' :'Ot of stock'}\r\n                        </Col>\r\n                    </Row>\r\n                    </ListGroup.Item>\r\n                    {/* Qty */}\r\n                    { product.countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty</Col>\r\n                                <Col>\r\n                                    <Form.Control as='select' value={qty} \r\n                                    onChange={(e) => setQty(e.target.value)}\r\n                                    >\r\n                                        {/* Shows the amount of product left */}\r\n                                     {\r\n                                     [...Array(product.countInStock).keys()].map( x =>(\r\n                                         <option key={x+1} value={x+1}>\r\n                                             {x+1}\r\n                                         </option>\r\n                                     )) }    \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    {/* /Qty */}\r\n\r\n                    <ListGroup.Item>\r\n                        <Button onClick={addToCartHandler}\r\n                                className='btn-block' type='button'\r\n                                disabled={product.countInStock ===0}\r\n                                >Add To Cart\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n\r\n         </Col>\r\n\r\n    </Row>\r\n    )}\r\n    </>\r\n    \r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\productsConstants.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\productsActions.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\userConstants.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":14,"column":42,"nodeType":"99","messageId":"100","endLine":14,"endColumn":72,"fix":"101"},{"ruleId":"102","severity":1,"message":"103","line":4,"column":47,"nodeType":"104","messageId":"105","endLine":4,"endColumn":60},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-whitespace-before-property","Unexpected whitespace before property 1.","MemberExpression","unexpectedWhitespace",{"range":"108","text":"109"},"no-unused-vars","'ListGroupItem' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[579,580],""]