[{"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\index.js":"1","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\store.js":"2","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\App.js":"4","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Header.js":"6","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\productsConstants.js":"11","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Product.js":"12","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Message.js":"13","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Rating.js":"15","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\productsActions.js":"16","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\cartActions.js":"19"},{"size":383,"mtime":1612956548107,"results":"20","hashOfConfig":"21"},{"size":872,"mtime":1614702521935,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":784,"mtime":1613582318928,"results":"24","hashOfConfig":"21"},{"size":1156,"mtime":1613582318930,"results":"25","hashOfConfig":"21"},{"size":977,"mtime":1613517940130,"results":"26","hashOfConfig":"21"},{"size":434,"mtime":1612108273457,"results":"27","hashOfConfig":"21"},{"size":1188,"mtime":1614873714837,"results":"28","hashOfConfig":"21"},{"size":3061,"mtime":1614753758607,"results":"29","hashOfConfig":"21"},{"size":4391,"mtime":1614703675775,"results":"30","hashOfConfig":"21"},{"size":357,"mtime":1613585083829,"results":"31","hashOfConfig":"21"},{"size":1087,"mtime":1612398084954,"results":"32","hashOfConfig":"21"},{"size":248,"mtime":1614324624887,"results":"33","hashOfConfig":"21"},{"size":378,"mtime":1614757895008,"results":"34","hashOfConfig":"21"},{"size":1883,"mtime":1612214376890,"results":"35","hashOfConfig":"21"},{"size":1276,"mtime":1614869335709,"results":"36","hashOfConfig":"21"},{"size":739,"mtime":1613590201497,"results":"37","hashOfConfig":"21"},{"size":100,"mtime":1613585238852,"results":"38","hashOfConfig":"21"},{"size":580,"mtime":1614714180130,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gfupd1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\index.js",[],["81","82"],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\store.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\App.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\CartScreen.js",["83","84"],"import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import {Link} from 'react-router'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Massage from '../components/Message'\r\nimport {addToCart} from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n\r\n    const productId = match.params.id\r\n    //return the number of qty they sent in the URL\r\n    const qty = location.search ? Number(location.search.split('=') [1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(()=>{\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler =(id) =>{\r\n        console.log('remove')\r\n    }\r\n\r\n\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>העגלה שלך</h1>\r\n            {cartItems.length === 0 ? (<Massage>העגלה ריקה <Link to='/'>המשך לקנות</Link></Massage> )\r\n            :(<ListGroup variant='flush'>\r\n\r\n                {cartItems.map(item => (\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}> {item.name} </Link>\r\n                            </Col>\r\n                            <Col md={2}> ${item.price} </Col>\r\n                            <Col md={2}> \r\n                            <Form.Control as='select' value={item.qty} \r\n                                    onChange={(e) => dispatch(addToCart((item.product,Number(e.target.value))))}\r\n                                    >\r\n                                     {\r\n                                     [...Array(item.countInStock).keys()].map( (x) =>(\r\n                                         <option key={x+1} value={x+1}>\r\n                                             {x+1}\r\n                                         </option>\r\n                                     )) }    \r\n                                    </Form.Control> \r\n                            </Col>\r\n                            <Col md={2} >\r\n                            <Button type='button' variant='light' onClick={()=> removeFromCartHandler(item.product)} >\r\n                                <i className='fas fa-trash'></i>\r\n\r\n                            </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>)\r\n            }\r\n            </Col>\r\n            <Col md={2}>\r\n            \r\n            </Col>\r\n            <Col md={2}>\r\n            \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default CartScreen\r\n","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\screens\\ProductScreen.js",["85"],"import React,{useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row ,Col,Image,ListGroup,Card,Button, ListGroupItem,Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Massage from '../components/Message'\r\n import {listProductDetails} from '../actions/productsActions'\r\n\r\nconst ProductScreen = ({ history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading,error, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match])\r\n\r\n    const addToCartHandler =() =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return <>\r\n    <Link className='btn btn-light my-3' to='/' >\r\n        Go back\r\n    </Link>\r\n    {loading ? <Loader /> \r\n     : error ? <Massage variant='danger'> {error} </Massage> \r\n     :(\r\n        <Row>\r\n        <Col md={6}>\r\n        <Image src={product.image} alt ={ `a`+ product.name} fluid/>\r\n        </Col>\r\n        \r\n        <Col md={3}>\r\n        <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <Rating\r\n                    value={product.rating} \r\n                    text={`${product.numReviews} reviews`} />\r\n            </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    Price:{ product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    Description:{ product.description}\r\n                    </ListGroup.Item>\r\n        </ListGroup>\r\n        </Col>\r\n\r\n         {/* cart  */}\r\n\r\n         <Col md={3}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>\r\n                           Price:                             \r\n                        </Col>\r\n                        <Col>\r\n                            <strong>${product.price}</strong>\r\n                        </Col>\r\n                    </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                    <Row>\r\n                         <Col>\r\n                           Status:                             \r\n                        </Col>\r\n                        <Col>\r\n                            {product.countInStock >0 ?'In stock' :'Ot of stock'}\r\n                        </Col>\r\n                    </Row>\r\n                    </ListGroup.Item>\r\n                    {/* Qty */}\r\n                    { product.countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty</Col>\r\n                                <Col>\r\n                                    <Form.Control as='select' value={qty} \r\n                                    onChange={(e) => setQty(e.target.value)}\r\n                                    >\r\n                                        {/* Shows the amount of product left */}\r\n                                     {\r\n                                     [...Array(product.countInStock).keys()].map( x =>(\r\n                                         <option key={x+1} value={x+1}>\r\n                                             {x+1}\r\n                                         </option>\r\n                                     )) }    \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    {/* /Qty */}\r\n\r\n                    <ListGroup.Item>\r\n                        <Button onClick={addToCartHandler}\r\n                                className='btn-block' type='button'\r\n                                disabled={product.countInStock ===0}\r\n                                >Add To Cart\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n\r\n         </Col>\r\n\r\n    </Row>\r\n    )}\r\n    </>\r\n    \r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\productsConstants.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\productsActions.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Amira\\Documents\\GitHub\\eCommerce-web-site\\frontend\\src\\actions\\cartActions.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":5,"column":51,"nodeType":"92","messageId":"93","endLine":5,"endColumn":55},{"ruleId":"94","severity":1,"message":"95","line":14,"column":42,"nodeType":"96","messageId":"97","endLine":14,"endColumn":72,"fix":"98"},{"ruleId":"90","severity":1,"message":"99","line":4,"column":47,"nodeType":"92","messageId":"93","endLine":4,"endColumn":60},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property 1.","MemberExpression","unexpectedWhitespace",{"range":"102","text":"103"},"'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation",[564,565],""]